package com.kh.oop.basic;

public class 객체 {
	/*
	OOP : Object - Orient - Programming
	
	컴퓨터 프로그램을 사용할 때 어떤 데이터를 입력받아서 순서대로 	처리하고 
	결과를 출력하는 부품들의 조합
	
	객체란 데이터와 데이터를 처리하는 메서드를 함께 묶어놓은 파일
		- 클래스(class) : 객체를 만들기 위한 탬플릿, 설계도
						처음에 만들어 줄 때 작성한 파일명과 public class가 
						동일해야함
						ex) 객체.java면 public class 객쳬{}
						파일을 외부에서 사용하고 싶다면
						첫 글자를 대문자로 작성해야함.
						따라서 파일명 첫 글자는 무조건 대문자를 사용할 것
						ex) Scanner sc = new Scanner();
						
	
		- 접근 제한자		
			public : 외부에서 접근이 가능하고 사용할 수 있도록 허락
			protected : 같은 패키지 or 자식 클래스에서만 사용할 수 있음
				default : 같은 패키지에서 소속된 클래스에서만 사용할 수 있음
			private : 비공개. 개인적인 것으로 외부에서 사용할 수 없음.
			
	클래스에는 "필드"와 "생성자", "메서드"가 있음
	필드 : 변수명을 작성하는 공간.
		  속성이나 데이터를 저장한 후 객체의 상태를 나타기도 함
			ex) String name;
				
	생성자 : 클래스명과 동일하게 이름을 작성해야 함.
		   객체를 초기화하는 특별한 종류의 메서드.
		   생성자를 작성하지 않아도 기본 생성자를 자동으로 제공
		   
	메서드 : 클래스 내부에 동작이나 활동 상태를 작성하는 공간
			ex) [접근 제한자] [반환타입] [메서드 이름] (매개변수 리스트) {
				메서드에서 실행할 내용 작성
			}
				public      void      practice   (         )  {
					System.out.println("안녕하세요");
			}
			*/
}

